{"version":3,"file":"js/LimitTableChoices.4b686cc4.js","mappings":"uMASe,SAASA,IACtB,IAAIC,GAASC,EAAAA,EAAAA,MACb,MAAMC,EAAU,KACP,CACLC,SAAU,GAEVC,aAAc,CACZC,KAAM,EACNC,UAAW,IAEbC,MAAO,IAGLC,GAAkBC,EAAAA,EAAAA,IAASP,KAG3BQ,EAAuB,KAC3BC,OAAOC,OAAOJ,EAAiBN,IAAU,EAS3CW,eAAeC,EAAcC,EAAS,CAAC,EAAGC,GAAU,EAAOC,GAAa,GACtE,KAAKC,EAAAA,EAAAA,IAAWF,GACd,MAAM,IAAIG,MAAO,gBAAenB,EAAOoB,QAGzC,IACEZ,EAAgBL,SAAW,GAE3B,IAAI,KAACkB,SAAcL,EAAQ,IACtBR,EAAgBJ,iBAChBkB,EAAAA,EAAAA,IAAgBP,GAEnBE,eAIF,OAFAT,EAAgBL,SAAWkB,EAAKE,MAAQ,GACxCf,EAAgBD,MAAQc,EAAKG,UAAUC,cAAgB,EAChDJ,CAIT,CAHE,MAAOK,GAEP,OADAlB,EAAgBL,SAAW,GACpBwB,QAAQC,OAAOF,EACxB,CACF,CAEA,MAAO,CACLlB,kBACAM,gBACAJ,uBAEJ,C,2qWCsBMR,EAAU,KACP,CACL2B,YAAa,CACX,CACEC,MAAO,SACPC,KAAM,gBAER,CACED,MAAO,KACPC,KAAM,cAER,CACED,MAAO,OACPC,KAAM,gBAER,CACED,MAAO,OACPC,KAAM,iBAER,CACED,MAAO,KACPE,OAAO,EACPC,MAAO,IAET,CACEH,MAAO,gBACPC,KAAM,sBAER,CACED,MAAO,SACPC,KAAM,2BAER,CACED,MAAO,WACPC,KAAM,2BAER,CACED,MAAO,WACPC,KAAM,+BAER,CACED,MAAO,aACPC,KAAM,iCAGVG,aAAc,GAEdC,OAAQ,CACNC,aAAc,MAIdC,GAAQ5B,EAAAA,EAAAA,IAASP,MAEjB,cACJY,EAAa,gBACbN,EAAe,qBACfE,GACEX,IAGEuC,GAAWC,EAAAA,EAAAA,IAAI,MAEfvB,EAAU,IACPW,QAAQa,QAAQC,GAGnBC,EAAoB,CAACC,GAAO,KAEhCN,EAAMO,SAAU,EAChBD,GAAQjC,IACRI,EAAcuB,EAAMF,OAAQnB,GAAS6B,SAAQC,IAC3CT,EAAMO,SAAU,CAAK,GACrB,EAIEG,EAAO,CAACC,GAAO,EAAMjC,EAAS,CAAC,KACnCsB,EAAMR,YAAcQ,EAAMR,YAAYoB,QAAOC,GAAQA,EAAKnB,QAC1DoB,EAAAA,EAAAA,KAAS,KACPT,GAAmB,GACnB,EAMEU,EAAON,IACXO,QAAQC,IAAIjB,EAAMH,aAAa,EAQ3BqB,EAAkBC,IACtBnB,EAAMH,aAAesB,CAAG,EAIpBC,EAAgBC,IAGpB,IAAIC,EAAMrB,EAASsB,MAAMC,MAAMC,OAAOC,UAAUH,MAChD,MAAMvB,EAAQsB,EAAIK,MAAKd,GAAQA,EAAKe,aAAeP,EAAIO,aAEvD,OAAON,EAAIO,OAASC,EAAMC,kBAAoB/B,CAAK,E,OAGrDU,I,smDC5LA,MAAMsB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://vue3-app/./src/components/Pagination/hooks/index.js","webpack://vue3-app/./src/views/func/LimitTableChoices.vue","webpack://vue3-app/./src/views/func/LimitTableChoices.vue?4959"],"sourcesContent":["import {\r\n  reactive,\r\n} from 'vue'\r\nimport {useRoute} from \"vue-router\";\r\nimport {isFunction} from '@/utils/types'\r\nimport {\r\n  delNullProperty,\r\n} from '@/utils'\r\n\r\nexport default function usePaginationState() {\r\n  let $route = useRoute()\r\n  const initVal = () => {\r\n    return {\r\n      dataList: [],\r\n      // 分页器配置\r\n      pagingConfig: {\r\n        page: 1, // 当前页码\r\n        page_size: 15, // 每页数量\r\n      },\r\n      total: 0 // 总数\r\n    }\r\n  }\r\n  const paginationState = reactive(initVal())\r\n\r\n  // 重置参数\r\n  const resetPaginationState = () => {\r\n    Object.assign(paginationState, initVal())\r\n  }\r\n\r\n  /**\r\n   * @param params 携带的参数\r\n   * @param getPagingData 获取表格数据的方法\r\n   */\r\n  let cancel = null\r\n\r\n  async function getPagingData(params = {}, getData = false, UNIQUE_REQ = true) {\r\n    if (!isFunction(getData)) {\r\n      throw new Error(`请传入获取数据方法:组件：${$route.name}`);\r\n      return\r\n    }\r\n    try {\r\n      paginationState.dataList = []\r\n      // delNullProperty去除空值\r\n      let {data} = await getData({\r\n        ...paginationState.pagingConfig,\r\n        ...delNullProperty(params),\r\n        // 频繁请求\r\n        UNIQUE_REQ\r\n      })\r\n      paginationState.dataList = data.list ?? []\r\n      paginationState.total = data.page_info.total_number ?? 0\r\n      return data\r\n    } catch (e) {\r\n      paginationState.dataList = []\r\n      return Promise.reject(e)\r\n    }\r\n  }\r\n\r\n  return {\r\n    paginationState,\r\n    getPagingData,\r\n    resetPaginationState,\r\n  }\r\n}\r\n","<template>\r\n  <div class=\"n-select-url\">\r\n    <el-input\r\n      class=\"w200\"\r\n      clearable\r\n      placeholder=\"请输入监测活动名称\"\r\n      v-model=\"state.search.monitor_name\"/>\r\n    <!--      <SelectProject\r\n            v-model=\"state.search.project_id\"\r\n            @change=\"projectChange\"\r\n          />\r\n          <SelectAuthorityApp\r\n            v-model=\"state.search.apply_id\"\r\n            :projectId=\"state.search.project_id\"\r\n          />-->\r\n    <span>可选: <i\r\n      class=\"c_primary\">{{ state.selectedData.length }}</i> / {{ optionalQuantity }} 条\r\n      </span>\r\n  </div>\r\n  <el-table\r\n    class=\"e-flex\"\r\n    ref=\"tableRef\"\r\n    v-loading=\"state.loading\"\r\n    :data=\"paginationState.dataList\"\r\n    :tooltip-effect=\"'light'\"\r\n    border\r\n    height=\"100%\"\r\n    @selection-change=\"selectionChange\"\r\n    style=\"width: 100%\"\r\n  >\r\n    <!--              :selectable=\"checkboxInit\"-->\r\n    <el-table-column\r\n      :selectable=\"checkboxInit\"\r\n      fixed=\"left\"\r\n      label=\"全选\"\r\n      type=\"selection\"\r\n      width=\"90\">\r\n    </el-table-column>\r\n    <el-table-column\r\n      v-for=\"column of state.tableColumn\"\r\n      :key=\"column.id\"\r\n      :fixed=\"column.fixed\"\r\n      :label=\"column.label\"\r\n      :prop=\"column.prop\"\r\n      :show-overflow-tooltip=\"!column.isBtn\"\r\n      :type=\"column.type\"\r\n      :min-width=\"column.width ?? 140\"\r\n    >\r\n      <template #default=\"{row}\">\r\n        {{ row[column.prop] }}\r\n      </template>\r\n    </el-table-column>\r\n  </el-table>\r\n  <Pagination\r\n    style=\"margin-top: 20px\"\r\n    v-model:limit=\"paginationState.pagingConfig.page_size\"\r\n    v-model:page=\"paginationState.pagingConfig.page\"\r\n    :total=\"paginationState.total\"\r\n    @getData=\"getMonitoringData\"\r\n  />\r\n  <el-button @click=\"save\">提交</el-button>\r\n</template>\r\n\r\n<script setup>\r\nimport {\r\n  ref,\r\n  reactive,\r\n  nextTick,\r\n  watch\r\n} from 'vue'\r\nimport {\r\n  ElMessage\r\n} from 'element-plus'\r\nimport {debounce} from 'lodash-es'\r\n// 导入分页hooks\r\nimport usePaginationState from \"@/components/Pagination/hooks\";\r\nimport limitTableChoicesJson from \"./data/limit-table-choices.json\";\r\n\r\nconst props = defineProps({\r\n  optionalQuantity: {\r\n    type: Number,\r\n    default: 10\r\n  },\r\n})\r\n\r\nconst initVal = () => {\r\n  return {\r\n    tableColumn: [\r\n      {\r\n        label: '监测活动名称',\r\n        prop: 'monitor_name',\r\n      },\r\n      {\r\n        label: '应用',\r\n        prop: 'apply_name',\r\n      },\r\n      {\r\n        label: '应用包名',\r\n        prop: 'package_name',\r\n      },\r\n      {\r\n        label: '下载链接',\r\n        prop: 'download_link',\r\n      },\r\n      {\r\n        label: '操作',\r\n        isBtn: true,\r\n        width: 60\r\n      },\r\n      {\r\n        label: '有效触点(点击) 监测链接',\r\n        prop: 'click_monitor_link',\r\n      },\r\n      {\r\n        label: '展示监测链接',\r\n        prop: 'impression_monitor_link',\r\n      },\r\n      {\r\n        label: '视频播放监测链接',\r\n        prop: 'video_play_monitor_link',\r\n      },\r\n      {\r\n        label: '视频播完监测链接',\r\n        prop: 'video_complete_monitor_link',\r\n      },\r\n      {\r\n        label: '视频有效播放监测链接',\r\n        prop: 'video_effective_monitor_link',\r\n      },\r\n    ],\r\n    selectedData: [],\r\n    // 记录监测活动列表筛选条件\r\n    search: {\r\n      monitor_name: '',\r\n    },\r\n  }\r\n}\r\nconst state = reactive(initVal())\r\n// 使用分页组件hooks\r\nconst {\r\n  getPagingData,\r\n  paginationState,\r\n  resetPaginationState\r\n} = usePaginationState()\r\n\r\n// 实例\r\nconst tableRef = ref(null)\r\n\r\nconst getData = () => {\r\n  return Promise.resolve(limitTableChoicesJson)\r\n}\r\n// 获取监控列表\r\nconst getMonitoringData = (mark = false) => {\r\n  // 数据未加载完成表格 显示加载效果\r\n  state.loading = true\r\n  mark && resetPaginationState()\r\n  getPagingData(state.search, getData).finally(_ => {\r\n    state.loading = false\r\n  })\r\n}\r\n\r\n// bool = 是否显示操作\r\nconst open = (bool = true, params = {}) => {\r\n  state.tableColumn = state.tableColumn.filter(item => item.prop)\r\n  nextTick(() => {\r\n    getMonitoringData()\r\n  })\r\n}\r\nconst reset = bool => {\r\n  flag = false\r\n  Object.assign(state, initVal())\r\n}\r\nconst save = _ => {\r\n  console.log(state.selectedData)\r\n}\r\n\r\nconst projectChange = () => {\r\n  state.search.apply_id = ''\r\n}\r\n\r\n// 全选\r\nconst selectionChange = val => {\r\n  state.selectedData = val\r\n}\r\n\r\n// 限制选择数量\r\nconst checkboxInit = (row) => {\r\n  // 设置checkbox，选中状态，是否可选\r\n  // 获取当前选择的数据\r\n  let arr = tableRef.value.store.states.selection.value\r\n  const state = arr.some(item => item.monitor_id === row.monitor_id)\r\n  // true 可选\r\n  return arr.length < props.optionalQuantity || state\r\n}\r\n\r\nopen()\r\n</script>\r\n<style lang=\"scss\">\r\n.n-select-url-dialog {\r\n  min-height: 750px;\r\n\r\n  > .el-dialog__body {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    > div {\r\n      &:not(:last-of-type) {\r\n        margin-bottom: 20px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n<style lang=\"scss\" scoped>\r\n.e-flex {\r\n  flex: 1;\r\n}\r\n\r\n.n-select-url {\r\n  margin-bottom: 20px;\r\n\r\n  > div {\r\n    margin-right: 20px;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./LimitTableChoices.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LimitTableChoices.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./LimitTableChoices.vue?vue&type=style&index=0&id=8e2e2706&lang=scss\"\nimport \"./LimitTableChoices.vue?vue&type=style&index=1&id=8e2e2706&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\Game7-2021-02\\\\Desktop\\\\my-code\\\\vue3-app\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-8e2e2706\"]])\n\nexport default __exports__"],"names":["usePaginationState","$route","useRoute","initVal","dataList","pagingConfig","page","page_size","total","paginationState","reactive","resetPaginationState","Object","assign","async","getPagingData","params","getData","UNIQUE_REQ","isFunction","Error","name","data","delNullProperty","list","page_info","total_number","e","Promise","reject","tableColumn","label","prop","isBtn","width","selectedData","search","monitor_name","state","tableRef","ref","resolve","limitTableChoicesJson","getMonitoringData","mark","loading","finally","_","open","bool","filter","item","nextTick","save","console","log","selectionChange","val","checkboxInit","row","arr","value","store","states","selection","some","monitor_id","length","props","optionalQuantity","__exports__"],"sourceRoot":""}